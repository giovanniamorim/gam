{"version":3,"file":"static/js/783.116f29d7.chunk.js","mappings":"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","sources":["views/gam/viabilities/TechnicalViabilities.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CCard, CCardBody, CCol, CRow } from '@coreui/react';\nimport { Tabs, Tab, Alert } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport '../../../scss/_custom.scss'; \n\nconst TOTAL_ITEMS = 11;\n\nconst TechnicalViabilities = () => {\n  const [technicalViabilities, setCheckedItems] = useState({});\n  const [showMessage, setShowMessage] = useState(false);\n  const [technicalPercentage, setSelectedPercentageState] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const savedItems = localStorage.getItem('technicalViabilities');\n    if (savedItems) {\n      setCheckedItems(JSON.parse(savedItems));\n    }\n\n    const savedPercentage = localStorage.getItem('technicalPercentage');\n    if (savedPercentage) {\n      setSelectedPercentageState(parseFloat(savedPercentage));\n    }\n  }, []);\n\n  const handleCheckboxChange = (event) => {\n    const itemName = event.target.name;\n    const isChecked = event.target.checked;\n    setCheckedItems((prevCheckedItems) => {\n      const updatedCheckedItems = {\n        ...prevCheckedItems,\n        [itemName]: isChecked,\n      };\n      localStorage.setItem('technicalViabilities', JSON.stringify(updatedCheckedItems));\n      return updatedCheckedItems;\n    });\n  };\n\n  useEffect(() => {\n    const selectedOptions = Object.values(technicalViabilities).filter((value) => value).length;\n    const percentage = (selectedOptions / TOTAL_ITEMS) * 100;\n    if (TOTAL_ITEMS > 0) {\n      setSelectedPercentageState(percentage.toFixed(1));\n      dispatch({ type: 'SET_TECHNICAL_PERCENTAGE', payload: percentage.toFixed(1) });\n      localStorage.setItem('technicalPercentage', percentage.toFixed(1));\n    }\n\n    setShowMessage(percentage === 100);\n  }, [technicalViabilities, dispatch]);\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardBody>\n            <h4>Viabilidades Técnicas</h4>\n            <hr />\n            <div>\n              <Alert variant=\"success\">\n                Percentual de opções selecionadas: {localStorage.getItem('technicalPercentage') || '0.0'}%\n              </Alert>\n            </div>\n            <p>\n              O Estudo de Viabilidade, no contexto das diretrizes para adoção de Micro-Frontends (GAM), \n              é uma fase estratégica e sequencial que busca analisar as viabilidades gerenciais e técnicas \n              antes de decidir pela implementação da arquitetura de Micro-Frontends. \n              Essa abordagem visa garantir uma transição suave e bem-sucedida para essa arquitetura inovadora. A imagem abaixo demostra o fluxo\n              de atividades do Estudo de Viabilidade.\n            </p>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardBody>\n            <section>\n              <Tabs defaultActiveKey=\"compatibility\" id=\"technical-feasibilities-tabs\" className=\"mb-3\">\n                <Tab eventKey=\"compatibility\" title=\"Compatibilidade Tecnológica\">\n                  <ul className=\"no-bullets\">\n                    <li>\n                      <em>Objetivo:</em> Garantir que a arquitetura de Micro-Frontends seja compatível com as tecnologias existentes na infraestrutura da empresa, minimizando conflitos e promovendo uma transição suave.\n                    </li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Avaliação da Infraestrutura Atual\"\n                            checked={technicalViabilities['Avaliação da Infraestrutura Atual'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Avaliação da Infraestrutura Atual: Realizar uma análise detalhada da infraestrutura tecnológica existente, identificando as tecnologias, frameworks e bibliotecas em uso.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Identificação de Conflitos Potenciais\"\n                            checked={technicalViabilities['Identificação de Conflitos Potenciais'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Identificação de Conflitos Potenciais: Identificar possíveis conflitos entre as tecnologias utilizadas atualmente e aquelas associadas à arquitetura de Micro-Frontends.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Padronização de Tecnologias\"\n                            checked={technicalViabilities['Padronização de Tecnologias'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Padronização de Tecnologias: Considerar a padronização de tecnologias que são comuns tanto na infraestrutura atual quanto na arquitetura de Micro-Frontends para facilitar a integração.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Testes de Compatibilidade\"\n                            checked={technicalViabilities['Testes de Compatibilidade'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Testes de Compatibilidade: Implementar testes específicos usando o projeto piloto para verificar a compatibilidade entre os componentes de Micro-Frontends e a infraestrutura existente.\n                        </label>\n                      </div>\n                    </ul>\n                  </ul>\n                  <div>\n                    <div className=\"blue-box\">\n                      <strong>Exemplo Prático:</strong> Suponha que a empresa utilize o Angular como framework principal em seus sistemas existentes. Ao iniciar a adoção de Micro-Frontends, a equipe de análise de compatibilidade avalia a versão específica do Angular em uso e confirma sua compatibilidade com os requisitos do Micro-Frontend. Além disso, ao identificar a necessidade de uma biblioteca de gerenciamento de estado, a equipe opta por padronizar o uso do Redux, que é amplamente aceito tanto na infraestrutura atual quanto na arquitetura de Micro-Frontends. Durante o projeto piloto, são conduzidos testes específicos para verificar a interoperabilidade entre os Micro-Frontends e os serviços legados, garantindo uma transição suave e minimizando conflitos.\n                    </div>\n                  </div>\n                </Tab>\n                <Tab eventKey=\"integration\" title=\"Desafios de Integração\">\n                  <ul className=\"no-bullets\">\n                    <li>\n                      <em>Objetivo:</em> Identificar e abordar proativamente os desafios de integração que possam surgir durante a adoção da arquitetura de Micro-Frontends.\n                    </li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Mapeamento de Interfaces\"\n                            checked={technicalViabilities['Mapeamento de Interfaces'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Mapeamento de Interfaces: Realizar um mapeamento claro das interfaces entre os Micro-Frontends e outros componentes do sistema.\n                        </label>\n                      </li>\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Definição de Contratos\"\n                            checked={technicalViabilities['Definição de Contratos'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Definição de Contratos: Estabelecer contratos claros e documentados entre os Micro-Frontends e os serviços backend, garantindo consistência nas interações.\n                        </label>\n                      </li>\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Monitoramento Contínuo\"\n                            checked={technicalViabilities['Monitoramento Contínuo'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Monitoramento Contínuo: Implemente mecanismos de monitoramento contínuo para identificar e resolver rapidamente problemas de integração.\n                        </label>\n                      </li>\n                    </ul>\n                  </ul>\n                  <div className=\"blue-box\">\n                    <strong>Exemplo Prático:</strong> Durante a implementação de Micro-Frontends, um desafio de integração foi identificado na comunicação entre um Micro-Frontend específico e um serviço backend essencial. Utilizando o mapeamento de interfaces previamente documentado, a equipe consegue rapidamente diagnosticar o problema e atualizar o contrato de API. O monitoramento contínuo alerta a equipe sobre a anomalia, permitindo uma intervenção rápida e minimizando o impacto nos usuários finais.\n                  </div>\n                </Tab>\n                <Tab eventKey=\"functional-complexities\" title=\"Complexidades Funcionais\">\n                  <ul className=\"no-bullets\">\n                    <li>\n                      <em>Objetivo:</em> Entender e mitigar as complexidades funcionais associadas à arquitetura de Micro-Frontends, garantindo a entrega de funcionalidades de forma eficiente.\n                    </li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Análise de Requisitos\"\n                            checked={technicalViabilities['Análise de Requisitos'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Análise de Requisitos: Realizar uma análise aprofundada dos requisitos funcionais da aplicação, identificando possíveis complexidades.\n                        </label>\n                      </li>\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Design Modular\"\n                            checked={technicalViabilities['Design Modular'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Design Modular: Adote um design modular para os Micro-Frontends, dividindo a aplicação em componentes independentes para facilitar o gerenciamento das complexidades.\n                        </label>\n                      </li>\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Testes Unitários e de Integração\"\n                            checked={technicalViabilities['Testes Unitários e de Integração'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Testes Unitários e de Integração: Implementar testes unitários e de integração para validar a funcionalidade dos Micro-Frontends individualmente e em conjunto.\n                        </label>\n                      </li>\n                      <li>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Documentação Clara\"\n                            checked={technicalViabilities['Documentação Clara'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Documentação Clara: Mantenha uma documentação clara e abrangente que descreva as interações funcionais entre os Micro-Frontends e outros componentes.\n                        </label>\n                      </li>\n                    </ul>\n                  </ul>\n                  <div>\n                    <div className=\"blue-box\">\n                      <strong>Exemplo Prático:</strong> Durante a análise de requisitos foi identificado um requisito funcional complexo relacionado à gestão de permissões de usuários em diferentes Micro-Frontends. Ao adotar um design modular, a equipe decide criar um Micro-Frontend dedicado exclusivamente à gestão de permissões. Testes unitários e de integração são implementados para garantir que essa funcionalidade se integre sem problemas aos demais Micro-Frontends. A documentação clara detalha os fluxos de interação, simplificando a compreensão da complexidade funcional pela equipe.\n                    </div>\n                  </div>\n                </Tab>\n              </Tabs>\n            </section>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default TechnicalViabilities;\n"],"names":["TechnicalViabilities","technicalViabilities","setCheckedItems","useState","showMessage","setShowMessage","technicalPercentage","setSelectedPercentageState","dispatch","useDispatch","useEffect","savedItems","localStorage","getItem","JSON","parse","savedPercentage","parseFloat","handleCheckboxChange","event","itemName","target","name","isChecked","checked","prevCheckedItems","updatedCheckedItems","setItem","stringify","percentage","Object","values","filter","value","length","toFixed","type","payload","_jsx","CRow","children","_jsxs","CCol","xs","CCard","className","CCardBody","Alert","variant","Tabs","defaultActiveKey","id","Tab","eventKey","title","onChange"],"sourceRoot":""}