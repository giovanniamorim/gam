{"version":3,"file":"static/js/314.882488f5.chunk.js","mappings":"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","sources":["views/gam/implementation/OperationalImplementation.js"],"sourcesContent":["import { CCard, CCardBody, CCol, CRow } from '@coreui/react';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Tabs, Tab, Alert } from 'react-bootstrap';\n\nimport '../../../scss/_custom.scss';\n\nconst TOTAL_ITEMS = 11;\n\nconst OperationalImplementation = () => {\n  const [operationalImplementation, setCheckedItems] = useState({});\n  const [showMessage, setShowMessage] = useState(false);\n  const [operationalPercentage, setSelectedPercentageState] = useState(0);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const savedItems = localStorage.getItem('operationalImplementation');\n    if (savedItems) {\n      setCheckedItems(JSON.parse(savedItems));\n    }\n\n    const savedPercentage = localStorage.getItem('operationalPercentage');\n    if (savedPercentage) {\n      setSelectedPercentageState(parseFloat(savedPercentage));\n    }\n  }, []);\n\n  const handleCheckboxChange = (event) => {\n    const itemName = event.target.name;\n    const isChecked = event.target.checked;\n    setCheckedItems((prevCheckedItems) => {\n      const checkedItemsManagerialFeasibility = {\n        ...prevCheckedItems,\n        [itemName]: isChecked,\n      };\n      localStorage.setItem('operationalImplementation', JSON.stringify(checkedItemsManagerialFeasibility));\n      return checkedItemsManagerialFeasibility;\n    });\n  };\n\n  useEffect(() => {\n    const selectedOptions = Object.values(operationalImplementation).filter((value) => value).length;\n    const percentage = (selectedOptions / TOTAL_ITEMS) * 100;\n    if (TOTAL_ITEMS > 0) {\n      setSelectedPercentageState(percentage.toFixed(1));\n      dispatch({ type: 'SET_OPERATIONAL_PERCENTAGE', payload: percentage.toFixed(1) });\n      localStorage.setItem('operationalPercentage', percentage.toFixed(1));\n    }\n\n    setShowMessage(percentage === 100);\n  }, [operationalImplementation, dispatch]);\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardBody>\n              <h4>Decisões de Operacionais</h4>\n              <hr />\n              <div>\n                <Alert variant=\"success\">\n                  Percentual de opções selecionadas: {localStorage.getItem('operationalPercentage') || '0.0'}%\n                </Alert>\n              </div>\n              <hr />\n              <p>\n              As decisões operacionais focam nas escolhas estratégicas das áreas de compilação e implantação, compartilhamento de código, otimização de desempenho e a estrutura organizacional. No contexto dos micro-frontends, a tomada de decisões operacionais práticas e bem-informadas é fundamental para assegurar a agilidade, a colaboração eficiente entre equipes e a adaptação contínua às demandas dinâmicas do desenvolvimento de software distribuído.\n              </p>\n          </CCardBody>\n        </CCard>\n        <CCard className=\"mb-4\">\n          <CCardBody>\n            <section>\n              <Tabs defaultActiveKey=\"alignment\" id=\"integration-implementation-tabs\" className=\"mb-3\">\n                <Tab eventKey=\"alignment\" title=\"Compilação e Implantação\">\n                  <ul className=\"no-bullets\">\n                    <li><em>Objetivo:</em> Implementar um processo eficiente de compilação e implantação para permitir atualizações rápidas e independentes de cada micro-frontend.</li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Integração e Entrega contínua (CI/CD)\"\n                            checked={operationalImplementation['Integração e Entrega contínua (CI/CD)'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Integração e Entrega contínua (CI/CD): Utilizar ferramentas de integração contínua e entrega contínua (CI/CD) para automatizar o processo de compilação, testes e implantação. Garanta que cada alteração no código seja submetida a um pipeline automatizado para validar e implantar automaticamente.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Pipeline\"\n                            checked={operationalImplementation['Pipeline'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Pipeline: Configurar pipelines de entrega contínua para garantir uma integração suave e implantações rápidas. Automatize a geração de artefatos, como contêineres ou pacotes, prontos para a implantação em ambientes de produção.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Pipeline\"\n                            checked={operationalImplementation['Pipeline'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Orquestração: Explorar ferramentas como Kubernetes para orquestração de contêineres e escalabilidade.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Orquestração\"\n                            checked={operationalImplementation['Orquestração'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Logs e rastreamento: Integrar sistemas de registro (logs) e rastreamento para acompanhar eventos durante o processo de compilação e implantação. Isso facilita a identificação rápida de problemas e a análise de desempenho.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Métricas de Desempenho\"\n                            checked={operationalImplementation['Métricas de Desempenho'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Métricas de Desempenho: Implementar métricas de desempenho durante a compilação e a implantação para monitorar a eficiência do processo. Utilize ferramentas que ofereçam visibilidade em tempo real e alertas para eventos críticos.\n                        </label>\n                      </div>\n                    </ul>\n                    <div className=\"blue-box-2\">\n                      <strong>Exemplo Prático:</strong> \n                      Ao implementar a automação, a equipe decide integrar uma ferramenta CI/CD, como <a href=\"https://www.jenkins.io/\" target=\"_blank\" rel=\"noreferrer\">Jenkins</a>, ao repositório de código-fonte...\n                    </div>\n                  </ul>\n                </Tab>\n                <Tab eventKey=\"costs\" title=\"Compartilhamento de Código\">\n                  <ul className=\"no-bullets\">\n                    <li><em>Objetivo:</em> Facilitar e otimizar o compartilhamento de código entre os diferentes micro-frontends, promovendo uma abordagem eficiente e colaborativa no desenvolvimento distribuído.</li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Identificação de Funcionalidades Comuns\"\n                            checked={operationalImplementation['Identificação de Funcionalidades Comuns'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Identificação de Funcionalidades Comuns: Identificar funcionalidades comuns que possam ser usadas por bibliotecas.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Web Components e Design System\"\n                            checked={operationalImplementation['Web Components e Design System'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Web Components e Design System: Criar Web Components para encapsular funcionalidades específicas, garantindo modularidade e reusabilidade e integrar ao Design System da organização, garantindo consistência visual e de interação em todos os micro-frontends.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Controle de Versão\"\n                            checked={operationalImplementation['Controle de Versão'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Controle de Versão: Implementar um sistema de controle de versão como git utilizando ferramentas de gestão de pacotes npm ou yarn.\n                        </label>\n                      </div>\n                    </ul>\n                    <div className=\"blue-box-2\">\n                      <strong>Exemplo Prático:</strong> \n                      A equipe inicia o processo identificando funcionalidades comuns que podem ser encapsuladas em bibliotecas. Desenvolvem Web Components reutilizáveis para modularidade e reusabilidade, integrando-os ao Design System da organização para garantir consistência visual e de interação. Optam por utilizar <a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noreferrer\">Git</a> como sistema de controle de versão, combinado com <a href=\"https://www.npmjs.com/\" target=\"_blank\" rel=\"noreferrer\">npm</a> ou <a href=\"https://yarnpkg.com/\" target=\"_blank\" rel=\"noreferrer\">yarn</a> para gerenciamento eficiente de pacotes...\n                    </div>\n                  </ul>\n                </Tab>\n                <Tab eventKey=\"change-management\" title=\"Performance\">\n                  <ul className=\"no-bullets\">\n                    <li><em>Objetivo:</em> Garantir um desempenho eficiente na arquitetura de Micro-Frontends, otimizando a carga, renderização e interação das interfaces para proporcionar uma experiência do usuário ágil e responsiva.</li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Carregamento Assíncrono de Módulos\"\n                            checked={operationalImplementation['Carregamento Assíncrono de Módulos'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Carregamento Assíncrono de Módulos: Adotar estratégias de carregamento assíncrono, como Lazy Loading, para carregar módulos somente quando necessário, reduzindo o tempo de carregamento inicial.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Otimização de Renderização\"\n                            checked={operationalImplementation['Otimização de Renderização'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Otimização de Renderização: Utilizar técnicas como Virtual DOM ou Shadow DOM para otimizar a renderização, minimizando as atualizações desnecessárias na interface do usuário.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Gestão de Estado\"\n                            checked={operationalImplementation['Gestão de Estado'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Gestão de Estado: Implementar uma gestão de estado escolhendo uma solução que minimize a reatividade excessiva e mantenha um estado coerente entre os micro-frontends.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Cache de Recursos\"\n                            checked={operationalImplementation['Cache de Recursos'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Cache de Recursos: Implementar estratégias de cache para recursos estáticos e dinâmicos, reduzindo a necessidade de buscar repetidamente os mesmos dados do servidor.\n                        </label>\n                      </div>\n                    </ul>\n                    <div className=\"blue-box-2\">\n                      <strong>Exemplo Prático:</strong> \n                      A equipe decide adotar o Lazy Loading para carregar módulos de forma assíncrona, especialmente aqueles que não são essenciais na carga inicial. Implementam o Virtual DOM para otimizar a renderização, garantindo atualizações eficientes. Escolhem o Redux como solução de gestão de estado devido à sua eficiência com micro-frontends. Adicionalmente, estabelecem estratégias de cache usando armazenamento local para recursos estáticos e cache de servidor para dados dinâmicos, promovendo um desempenho eficiente na arquitetura de Micro-Frontends...\n                    </div>\n                  </ul>\n                </Tab>\n                <Tab eventKey=\"organizational-structure\" title=\"Estrutura Organizacional\">\n                  <ul className=\"no-bullets\">\n                    <li><em>Objetivo:</em> Estabelecer uma estrutura organizacional eficiente para a implementação de Micro-Frontends, promovendo uma colaboração fluida entre equipes e garantindo a coesão na entrega de funcionalidades.</li>\n                    <li><em>Recomendações:</em></li>\n                    <ul className=\"no-bullets\">\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Modelo de Squad\"\n                            checked={operationalImplementation['Modelo de Squad'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Modelo de Squad: Implementar o modelo de Squads, onde equipes multifuncionais e autônomas são responsáveis por recursos específicos. Isso promove a especialização e agilidade, favorecendo a entrega independente de micro-frontends.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Metodologia Ágil\"\n                            checked={operationalImplementation['Metodologia Ágil'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Metodologia Ágil: Adotar metodologias ágeis, como Scrum ou Kanban, para gerenciar o desenvolvimento de micro-frontends. Sprints regulares, reuniões de retrospectiva e práticas ágeis fortalecem a colaboração e a adaptação contínua.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Ferramentas de Colaboração\"\n                            checked={operationalImplementation['Ferramentas de Colaboração'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Ferramentas de Colaboração: Utilizar ferramentas de colaboração, como Slack, Microsoft Teams ou outras plataformas de comunicação. Essas ferramentas facilitam a comunicação entre equipes distribuídas, promovendo a troca de informações de forma eficaz.\n                        </label>\n                      </div>\n                      <div>\n                        <label className='ml-2'>\n                          <input className='input-label'\n                            type=\"checkbox\"\n                            name=\"Cultura de DevOps\"\n                            checked={operationalImplementation['Cultura de DevOps'] || false}\n                            onChange={handleCheckboxChange}\n                          />\n                          Cultura de DevOps: Cultivar uma cultura de DevOps, integrando desenvolvimento e operações. Isso inclui automação de processos, entrega contínua e monitoramento, garantindo eficiência na implementação e manutenção.\n                        </label>\n                      </div>\n                    </ul>\n                    <div className=\"blue-box-2\">\n                      <strong>Exemplo Prático:</strong> \n                      A equipe decide adotar o modelo de Squads, formando equipes dedicadas a diferentes micro-frontends. Escolhem a metodologia Scrum para gerenciar o desenvolvimento, realizando sprints regulares e reuniões de retrospectiva. Utilizam o Teams como plataforma de comunicação para facilitar a colaboração entre as equipes distribuídas. Essas escolhas estruturais contribuem para uma implementação prática e colaborativa de Micro-Frontend.\n                    </div>\n                  </ul>\n                </Tab>\n              </Tabs>\n            </section>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n}\n\nexport default OperationalImplementation;\n"],"names":["OperationalImplementation","operationalImplementation","setCheckedItems","useState","showMessage","setShowMessage","operationalPercentage","setSelectedPercentageState","dispatch","useDispatch","useEffect","savedItems","localStorage","getItem","JSON","parse","savedPercentage","parseFloat","handleCheckboxChange","event","itemName","target","name","isChecked","checked","prevCheckedItems","checkedItemsManagerialFeasibility","setItem","stringify","percentage","Object","values","filter","value","length","toFixed","type","payload","_jsx","CRow","children","_jsxs","CCol","xs","CCard","className","CCardBody","Alert","variant","Tabs","defaultActiveKey","id","Tab","eventKey","title","onChange","href","rel"],"sourceRoot":""}